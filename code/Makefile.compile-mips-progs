# Makefile for building user programs to run on top of Nachos
# Several things to be aware of: Nachos assumes that the location of
# the program startup routine (the location where the kernel jumps to
# when the program initially starts up) is location 0.  This means:
# start.o must be the first .o passed to ld, so that routine "Start"
# gets loaded at location 0


ifeq ($(MIPS_CC),)
$(warning No MIPS cross-compiler found)
$(warning Set GCCDIR or MIPS_CC in Makefile.sysdep)
$(warning Cannot compile nachos user programs.)
$(error Aborting.)
endif

C_SOURCES	:=	$(notdir $(wildcard $(topsrc_dir)/test/*.c))
S_SOURCES	:=	$(notdir $(wildcard $(topsrc_dir)/test/*.S))
# By default, all C files are expected to create a program. Change it
# if needed (no path should be prepend to program names)
PROGS	=	$(patsubst %.c,%,$(C_SOURCES))


# We use the "script" linker script to ensure the expected layout
LDFLAGS += -Wl,-T,$(topsrc_dir)/test/script -Wl,-N

INCDIRS	+=	userprog threads
# IN_USER_MODE must not be defined when compiling assembly files
CFLAGS 	+=	-G 0 -DIN_USER_MODE

# Sources must be looked for in test/ subdirectory
VPATH=$(topsrc_dir)/test

.PHONY: all
all: $(PROGS)

# Compute depend file names
C_DEPENDS =	$(patsubst %.c,.%.d,$(C_SOURCES)) 
S_DEPENDS =	$(patsubst %.c,.%.d,$(S_SOURCES)) 
DEPENDS =	$(C_DEPENDS) $(S_DEPENDS)

# Depends on all used Makfiles
$(patsubst %.c,%.o,$(S_SOURCES)): $(MAKEFILE_LIST)
$(patsubst %.c,%.o,$(C_SOURCES)): $(MAKEFILE_LIST)

# Avoid leaving .coff files after successful compilation
.INTERMEDIATE: $(patsubst %,%.coff,$(PROGS))

# LB: Caution! start.o should appear *before* $< for the load!
$(patsubst %,%.coff,$(PROGS)): %.coff: %.o start.o script
	$(lko_V)$(LINK.o) $(filter %.o,$^) $(LOADLIBES) $(LDLIBS) -o $@

c2n_V = $(c2n_V_$(V))
c2n_V_ = $(c2n_V_$(DEFAULT_VERBOSITY))
c2n_V_0 = @echo "  [NACHOS RELINK]	$@	($<)"; >/dev/null 

$(PROGS): %: %.coff $(topsrc_dir)/bin/coff2noff
	$(c2n_V)$(topsrc_dir)/bin/coff2noff $< $@ && chmod +x $@

$(topsrc_dir)/bin/coff2noff:
	$(MAKE) -C $(topsrc_dir)/bin TARGET=HOST coff2noff

PROGRAMS=$(PROGS)
# Cleaning rule
clean::
	$(RM) *.coff

