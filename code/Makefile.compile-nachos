# This is part of a GNU Makefile, mainly used by the Makefile
# in the build/ subdirectory.
#
# This Makefile compiles a nachos kernel.
# 
# When used (directly or by inclusion), several variables MUST be defined:
# * C_OFILES
#   list of object files (without prefix) built from C++ sources
# * topsrc_dir
#   path to top sources directory (relative to CWD)
#
# When used (directly or by inclusion), several variables SHOULD be defined:
# * INCDIRS
#   list of directory (relative to topsrc_dir) that must be added in includes
#   path
# * CPPFLAGS/CXXFLAGS/LDFLAGS/....
#   flags to add to the nachos compilation
# * DEFINES
#   flags added to CPPFLAGS
#
# When used (directly or by inclusion), several variables MAY be defined:
# * OBJ_PREFIX (default [])
#   this prefix will be added to all object (and dependency) files
# * NACHOS (default [nachos])
#   the name of the nachos kernel executable
# * S_OFILES (default [switch.o])
#   list of object files (without prefix) built from assembly
#
#
# Copyright (c) 1992 The Regents of the University of California.
# All rights reserved.  See copyright.h for copyright notice and limitation 
# of liability and disclaimer of warranty provisions.
# Copyright (c) 2011 Vincent Danjean

###########################################################################

ifeq ($(C_OFILES),)
$(error C_OFILES must be defined when calling this Makefile)
endif
ifeq ($(topsrc_dir),)
$(error topsrc_dir must be defined when calling this Makefile)
endif

# By default, only one file is compiled from assembly (from threads/)
S_OFILES	?=	switch.o
# By default, nachos kernel program is called "nachos"
NACHOS		?=	nachos

CPPFLAGS += $(DEFINES) $(HOST)
CFLAGS += -g -Wall -Wshadow
CXXFLAGS += -g -Wall -Wshadow

OFILES		:=	$(strip $(addprefix $(OBJ_PREFIX),$(C_OFILES) $(S_OFILES)))

# RN: Dependency files start with a '.' to avoid annoying completion
# confusion under shell, emacs, etc.

C_DFILES	:=	$(patsubst %.o,.%.d,$(C_OFILES))
S_DFILES	:=	$(patsubst %.o,.%.d,$(S_OFILES))
DFILES		:=	$(strip $(C_DFILES) $(S_DFILES))

# RN: Hummm... There's a lot to tell about the story of the two
# following lines. Essentially, it allows 'make' to implicitely search
# for source/header files in various directories.

joinlist=$(subst $(EMPTY) $(EMPTY),$1,$2)
buildvpath=$(call joinlist,:,$(addprefix $(topsrc_dir)/,$1))
vpath %.cc $(call buildvpath,machine threads userprog filesys network vm)
vpath %.S $(call buildvpath,machine threads userprog filesys network vm)

.PHONY: all
all: $(NACHOS)

$(OFILES) $(DFILES): $(MAKEFILE_LIST)

$(NACHOS): $(OFILES)
	$(lkcc_V)$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@

ifneq ($(MAKECMDGOALS),clean)
-include $(DFILES)
endif

PROGRAMS=$(NACHOS)
clean::
	$(RM) DISK


