#!/bin/sh

# To compile NachOS on a Debian environment (x86), you need to
# install the folowing packages:
#  build-essential
#  g++-multilib (on x86-64 only)
# and a MIPS cross-compiler. See below.


# At the end of the document, you will find a script that can help
# to create a cross-compiler on Debian. However, currently (11/2011),
# Debian is migrating toward multiarch and the script does not work.
#
# What I propose is to install Debian packages of a GCC MIPS cross-compiler
# that has been compiled from and on a Debian squeeze (stable)
# These packages should work on Debian stable (squeeze), testing (wheezy)
# and unstable (sid). They also work on Ubuntu sometimes requiring to
# manually install a extra package.
#
# Only the AMD64 and i386 architecture is supported by these pre-compiled
# packages, not the i386 one.
#
# Just run this script (or look at it and type the commands yourself) to
# install a MIPS cross-compiler

set -e

# either this script must be called as root or the user must be
# able to use sudo
if [ "$(whoami)" = root ]; then
	ROOT=
else
	ROOT=sudo
fi

# Check that we are on amd64 or i386
case "$(uname -m)" in
x86_64)
	ARCH=amd64
	;;
i*86)
	ARCH=i386
	;;
*)
	echo "Wrong architechture $(uname -m). Aborting." 1>&2
	exit 1
esac

install_package() {
	local UPDATE=
	if [ "$1" = --no-update ]; then
		UPDATE=": skipping "
		shift
	fi
	$UPDATE $ROOT apt-get update
	if dpkg -l "$1" | grep -s '^ii' ; then
		return 0
	fi
	set +x
	echo "**************************************************************"
	echo "* Installing the $1 package from your distrib"
	echo "* $2"
	echo "**************************************************************"
	echo "* Refuse the installation (and try to install it yourself    *"
	echo "* with your usual package manager) if something seems wrong  *"
	echo "* (packages that need to be removed, to many packages        *"
	echo "* upgraded, ...)                                             *"
	echo "**************************************************************"
	set -x
	$ROOT apt-get install $1
}

# choose installation method
if [ "$(apt-cache -q policy gcc-mipsel-linux-gnu)" == "" ] ; then
	cat <<EOF
MIPS cross compiler does not seem available in your distrib.
Use mandelbrot or a virtual machine.

Some distrib can have external repositories with cross compilers.
For example, for Debian 8 (jessie), you can type (as root):

echo "deb http://emdebian.org/tools/debian/ jessie main" > /etc/apt/sources.list.d/cross-compilers.list
curl http://emdebian.org/tools/debian/emdebian-toolchain-archive.key | sudo apt-key add -
apt-get update

And restart this script

EOF

else
	echo "MIPS cross compiler seems available in your distrib. Trying to use it"
	if ! dpkg --print-foreign-architectures | grep -sq mipsel ; then
		echo "Adding mipsel as a foreign architecture on your system"
		$ROOT dpkg --add-architecture mipsel
	fi
	if test "$ARCH" = amd64 ; then
		GCC_VER=$(gcc --version | head -1 | \
			sed -e 's/.* \([0-9]\+\.[0-9]\+\)\.[0-9]\+\( .*\)\?$/\1/p;d')
		if [ -z "$GCC_VER" ]; then
			echo "Cannot find your GCC version. Aborting."
			exit 1
		fi
		GCC_VER_MAJ=$(echo $GCC_VER | cut -d . -f 1)"
		if ! dpkg --print-foreign-architectures | grep -sq i386 ; then
			echo "Adding i386 as a foreign architecture on your system"
			$ROOT dpkg --add-architecture i386
		fi
	fi
	install_package gcc-mipsel-linux-gnu "Installing the cross-compiler of your distrib. gcc-multiarch and g++-multiarch might be asked to be removed"
	if test "$ARCH" = amd64 ; then
		if [ "$(apt-cache -q policy g++-${GCC_VER_MAJ}-multilib)" != "" ] ; then
			install_package --no-update g++-${GCC_VER_MAJ}-multilib
		else
			# before gcc 5
			install_package --no-update libc6-dev:i386 "in order to compile NachOS on amd64 systems"
			install_package --no-update lib32stdc++-$GCC_VER-dev "in order to compile NachOS on amd64 systems"
		fi
	fi

	echo "Ok, you should be able to compile NachOS"

	exit 0
fi


############################################################################

                   ####### #     # ######
                   #       ##    # #     #
                   #       # #   # #     #
                   #####   #  #  # #     #
                   #       #   # # #     #
                   #       #    ## #     #
                   ####### #     # ######

# never go further: creating a MIPS cross-compiler is not working for now

exit 0

############################################################################


# Here is a script to build and install a cross compiler to be used on Nachos
#
# Contrary to previous document, this script build a recent cross compiler
# (gcc 4.6 by default) so gcc 2.95 is not used anymore.
# improvement: software is installed as real packages on the system
# inconvenient: only works for Debian (unstable and perhaps
#   testing/wheezy) and it could perhaps work with ubuntu (feedback welcome)
#
# Note: recent gcc requires the target libc to build the cross-compiler.
# This is why I cannot tell how to build one only from gcc sources
# (as it was done with gcc 2.95)

# I think I put all required commands. Howver, it is probably better
# to copy and paste the command to be able to look at the results
#
# WARNING: building the cross compiler itself requires lots of time and
# lots of available disk space. It is probably possible to reduce this
# if we build only the C cross compiler (and not C++, ...) but I did not
# look if this can be easily done.

# Do not copy-paste the next line in a interractive shell
# (else your shell will exit as soon as a command does not succeed)
set -ex

mkdir -p tools
cd tools

TARGET=mipsel-linux-gnu
if test "$(ls binutils-$TARGET_*.deb 2>/dev/null)" ; then
	echo "Skipping building and installing binutils (already there)"
else
	apt-get source binutils
	sudo apt-get build-dep binutils
	sudo apt-get install fakeroot build-essential binutils-multiarch
	cd binutils-*
	# on squeeze, replace the following line by
        # env TARGET=$TARGET fakeroot debian/rules binary-cross
	env TARGET=$TARGET dpkg-buildpackage -b -uc -us
	cd ..
	sudo dpkg -i binutils-$TARGET_*.deb
fi

sudo apt-get install dpkg-cross xapt
sudo xapt --mirror http://ftp.fr.debian.org/debian/ \
  --arch mipsel --suite unstable --keep-cache libc6-dev libc6 \
  libc6-dev-mips64 libc6-dev-mipsn32 libc6-mips64 linux-libc-dev libc6-mipsn32

# At least 4.5. Previous does not have a correct cross-compiler build setup
GCC_V=4.6

apt-get source gcc-${GCC_V}
sudo apt-get build-dep gcc-${GCC_V}
sudo apt-get install gcc-${GCC_V}-source

cd gcc-${GCC_V}-*
env GCC_TARGET=mipsel debian/rules control
env GCC_TARGET=mipsel dpkg-buildpackage -rfakeroot -us -uc -b

cd ..
sudo dpkg -i gcc-${GCC_V}-mipsel-linux-gnu_*.deb gcc-${GCC_V}-mipsel-linux-gnu-base_*.deb  cpp-${GCC_V}-mipsel-linux-gnu_*.deb  libgcc1-mipsel-cross_*.deb  libgomp1-mipsel-cross_*.deb

# Once the packages are installed, all the tools directory can be removed.

# This version of nachos will automatically detect and use this cross-compiler
# Enjoy.
